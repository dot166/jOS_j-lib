name: Build

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.MAVEN_USERNAME }}
      ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.MAVEN_PASSWD }}
      ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_KEY }}
      ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSWD }}
      CARGO_TERM_COLOR: always

    steps:
    - name: Checkout repo
      uses: actions/checkout@v5
      with:
        fetch-depth: 0

    - name: Configure git
      run: |
        git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config --global user.name "github-actions[bot]"

    - name: Generate wallpaper thumbnails
      run: |
        cd ThemeEngine
        cd gen-variants
        cargo update
        cargo build --release --verbose
        cp target/release/gen-wallpaper-thumbs ../gen-wallpaper-thumbs
        cd ..
        ./gen-wallpaper-thumbs
        cd ..

    - name: Commit changes
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' }}
      run: |
        git add .
        git commit -m "Update Wallpaper Thumbnails" || true

    - name: Build and test Rust Library
      run: |
        cd rustLib
        cargo update
        cargo build --verbose
        cargo test --package j_lib_rust --lib tests

    - name: Commit changes
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' }}
      run: |
        git add .
        git commit -m "Update Rust Library stuff" || true
    
    - name: Update Helpline List
      run: |
        cd aosp/sensitive-pn/etc
        curl -O https://raw.githubusercontent.com/LineageOS/android_vendor_lineage/refs/heads/lineage-22.2/prebuilt/common/etc/sensitive_pn.xml
        cd ../../..

    - name: Commit changes
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' }}
      run: |
        git add .
        git commit -m "Update Helpline List" || true
    
    - name: Setup JDK 17
      uses: actions/setup-java@v5
      with:
        distribution: 'zulu'
        java-version: 17
        cache: 'gradle'

    - name: Check if Release build
      shell: sh
      run: |
        VERSION=$(cat ver)
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        RELEASE=0 && git show-ref --tags --verify --quiet "refs/tags/$VERSION" || RELEASE=1
          echo "RELEASE=$RELEASE" >> $GITHUB_ENV

    - name: fix version in json and java
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' && env.RELEASE == '1' }}
      run:  |
        cp .github/lib_jLib.json config/libraries/lib_jLib.json
        sed -ri 's/'"template"'/'"$(cat ver)"'/g' config/libraries/lib_jLib.json
        cp .github/LibVer.java j-LIB-core/src/main/java/io/github/dot166/jlib/internal/utils/LibVer.java
        sed -ri 's/'"template"'/'"$(cat ver)"'/g' j-LIB-core/src/main/java/io/github/dot166/jlib/internal/utils/LibVer.java

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Generate Keystore
      run: |
        echo "${{ secrets.KEYSTORE }}" > a.txt
        base64 -d a.txt > key.jks
        echo "${{ secrets.KEYSTORE_PROPS }}" > b.txt
        base64 -d b.txt > keystore.properties

    - name: Generate aboutlibraries.json
      run: ./gradlew ThemeEngine:exportLibraryDefinitions -PaboutLibraries.exportPath=build/jLib/aboutlibs

    - name: Copy aboutlibraries.json
      run: cp ThemeEngine/build/jLib/aboutlibs/aboutlibraries.json j-LIB-core/src/main/res/raw/aboutlibraries_jlib.json

    - name: Build
      run: ./gradlew assembleRelease

    - name: Publish to Maven Central
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' && env.RELEASE == '1' }}
      run: |
        ./gradlew j-Lib-core:publishAndReleaseToMavenCentral --no-configuration-cache
        ./gradlew --stop

    - name: Remove temp files
      run: rm -rf a.txt b.txt

    - name: Commit changes
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' }}
      run: |
        git add .
        git commit -m "Update gradle generated files for AOSP" || true

    - name: add Dependencies to AOSP
      run: ./gradlew generateBp

    - name: Commit changes
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' }}
      run: |
        git add .
        git commit -m "Publish dependencies for AOSP" || true
    
    - name: send to repo
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' && env.RELEASE == '1' }}
      run: |
        mkdir -p artifacts/apps/packages/io.github.dot166.themeengine/${{ env.VERSION }}
        echo "channel = \"stable"\" > artifacts/apps/packages/io.github.dot166.themeengine/${{ env.VERSION }}/props.toml
        cp ThemeEngine/build/outputs/apk/release/ThemeEngine-${{ env.VERSION }}-release.apk artifacts/apps/packages/io.github.dot166.themeengine/${{ env.VERSION }}/base.apk
        cp ThemeEngine/build/outputs/apk/release/ThemeEngine-${{ env.VERSION }}-release.apk.idsig artifacts/apps/packages/io.github.dot166.themeengine/${{ env.VERSION }}/base.apk.idsig
        git clone https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/dot166/apks.git apks
        cp -r artifacts/* apks/
        cd apks
        git add .
        git commit -m "ThemeEngine ${{ env.VERSION }}"
        git push origin main
        cd ..
        rm -rf artifacts/
        rm -rf apks/

    - name: Create AOSP Prebuilt APK
      run: cp "ThemeEngine/build/outputs/apk/release/ThemeEngine-${{ env.VERSION }}-release.apk" ThemeEngine/ThemeEngine.apk

    - name: Commit changes
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' && env.RELEASE == '1' }}
      run: |
        git add .
        git commit -m "Create AOSP Prebuilt APK" || true

    - name: Push changes to repo
      uses: ad-m/github-push-action@master
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' }}
      with:
        branch: ${{ github.ref }}
    
    - name: Upload to new Release
      uses: softprops/action-gh-release@v2
      if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'dot166/jOS_j-Lib' && env.RELEASE == '1' }}
      with:
        tag_name: ${{ env.VERSION }}
        make_latest: true
        generate_release_notes: true
        files: "ThemeEngine/build/outputs/apk/release/ThemeEngine-${{ env.VERSION }}-release.apk"
